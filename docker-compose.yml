services:
  # --- PHP-FPM app ---
  app:
    profiles: ["full"]
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mediadrop-app
    env_file: .env
    volumes:
      - ./:/var/www/html:cached
      - storage:/var/www/html/storage
      # - vendor:/var/www/html/vendor
    depends_on:
      postgres:
        condition: service_healthy

  # --- Nginx ---
  web:
    profiles: ["full"]
    image: nginx:1.27-alpine
    container_name: mediadrop-web
    ports:
      - "8080:80"        # open http://localhost:8080
    volumes:
      - ./:/var/www/html:cached
      - storage:/var/www/html/storage
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app

  # --- Queue worker ---
  queue:
    profiles: ["full"]
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mediadrop-queue
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    env_file: .env
    volumes:
      - ./:/var/www/html:cached
      - storage:/var/www/html/storage
      # - vendor:/var/www/html/vendor
    depends_on:
      - app

  # --- Scheduler ---
  scheduler:
    profiles: ["full"]
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: mediadrop-scheduler
    command: php artisan schedule:work
    env_file: .env
    volumes:
      - ./:/var/www/html:cached
      - storage:/var/www/html/storage
      # - vendor:/var/www/html/vendor
    depends_on:
      - app

  # --- Postgres ---
  postgres:
    profiles: ["dbonly", "full"]
    image: postgres:18
    container_name: mediadrop-postgres
    environment:
      POSTGRES_DB: mediadrop
      POSTGRES_USER: mediadrop
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mediadrop -d mediadrop"]
      interval: 3s
      timeout: 3s
      retries: 20

volumes:
  pgdata:
  storage:
  vendor:
